{"version":3,"sources":["reducers/curenciesReducer.js","reducers/reducers.js","constants/currencyConstants.js","helpers/utils.js","requests/currencyRequests.js","actions/curencyApiActionCreators.js","App.js","index.js"],"names":["initalState","currencies","exchangeRate","reducers","combineReducers","currency","state","arguments","length","undefined","action","type","Object","objectSpread","results","rate","getApi","method","url","payload","fetch","headers","Accept","Content-Type","body","JSON","stringify","then","response","currencyRequests","query","concat","fetchCurrenciesSuccess","result","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","amount","from","to","convert","bind","assertThisInitialized","inputChange","curOneChange","curtwoChange","e","preventDefault","getExchangeRate","setState","target","value","fetchCurrencies","nextProps","_this2","react_default","a","createElement","className","onSubmit","onChange","placeholder","keys","map","currencyList","key","id","Component","connect","_ref","dispatch","json","catch","error","console","log","val","toFixed","fetchExchangeRateSuccess","store","createStore","compose","applyMiddleware","thunk","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.181cdf6a.chunk.js","sourcesContent":["import * as currencyConstants from '../constants/currencyConstants'\n\nconst initalState = {\n  currencies: {},\n  exchangeRate: 0\n}\n\nexport const currency = (state = initalState, action) => {\n\n  switch(action.type) {\n    case currencyConstants.FETCH_CURRENCIES_SUCCESS:\n      return {...state, currencies: action.currencies.results}\n    case currencyConstants.FETCH_EXCHANGE_RATE_SUCCESS:\n      return {...state, exchangeRate: action.rate}\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { currency } from './curenciesReducer'\n\nconst reducers = combineReducers({\n  currency\n})\n\nexport { reducers }","export const FETCH_CURRENCIES_SUCCESS='FETCH_CURRENCIES_SUCCESS'\nexport const FETCH_EXCHANGE_RATE_SUCCESS='FETCH_EXCHANGE_RATE_SUCCESS'","const getApi = (method, url, payload) => {\n  return fetch(url, {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    method: method,\n    body: JSON.stringify(payload),\n  }).then(response => {\n    return response\n  })\n}\n\nexport { getApi }\n","import { getApi } from '../helpers/utils'\n// var https = require('https');\n\nexport default {\n  getCurrencies(){\n    return getApi('GET', 'https://free.currencyconverterapi.com/api/v5/currencies')\n  },\n  getExchangeRate(query) {\n    return getApi('GET', `https://free.currencyconverterapi.com/api/v5/convert?q=${query}&compact=y`)\n  }\n}\n","import currencyRequests from '../requests/currencyRequests'\nimport * as currencyConstants from '../constants/currencyConstants'\n\nconst fetchCurrencies = () => {\n  return (dispatch) => {\n    return (\n      currencyRequests\n        .getCurrencies()\n        .then(response => response.json())\n        .then(response => dispatch(fetchCurrenciesSuccess(response)))\n        .catch(error => console.log(error))\n    )\n  }\n}\n\nconst fetchCurrenciesSuccess = (result) => {\n  return {\n    type: currencyConstants.FETCH_CURRENCIES_SUCCESS,\n    currencies: result\n  }\n}\n\nconst fetchExchangeRateSuccess = (result, query) => {\n  return {\n    type: currencyConstants.FETCH_EXCHANGE_RATE_SUCCESS,\n    rate: result[query].val.toFixed(2)\n  }\n}\n\nconst getExchangeRate = (query) => {\n  return (dispatch) => {\n    return (\n      currencyRequests\n        .getExchangeRate(query)\n        .then(response => response.json())\n        .then(response => dispatch(fetchExchangeRateSuccess(response, query)))\n        .catch(error => console.log(error))\n    )\n  }\n}\n\nexport { fetchCurrencies, getExchangeRate }\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport './App.css';\nimport { fetchCurrencies, getExchangeRate } from './actions/curencyApiActionCreators'\n// import SelectCurrencyFrom from './components/SelectCurrencyFrom'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencies: {},\n      amount: 0,\n      from: 'ALL',\n      to: 'ALL',\n      exchangeRate: null,\n      result: 0\n    }\n\n    this.convert = this.convert.bind(this)\n    this.inputChange = this.inputChange.bind(this)\n    this.curOneChange = this.curOneChange.bind(this)\n    this.curtwoChange = this.curtwoChange.bind(this)\n  }\n  \n  convert(e) {\n    e.preventDefault()\n    const query = `${this.state.from}_${this.state.to}`\n    this.props.getExchangeRate(query)\n    this.setState({ result: this.state.amount })\n  }\n\n  curtwoChange(e) {\n    e.preventDefault()\n    this.setState({to: e.target.value})\n  }\n  curOneChange(e) {\n    e.preventDefault()\n    this.setState({from: e.target.value})\n  }\n  inputChange(e) {\n    e.preventDefault()\n    this.setState({amount: e.target.value})\n  }\n\n  componentWillMount() { this.props.fetchCurrencies() }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      currencies: nextProps.currency.currencies,\n      exchangeRate: nextProps.currency.exchangeRate\n    })\n  }\n\n  render() {\n    return(\n      <div className='curConvert'>\n        <div className='header'>\n          <h1>Currency Converter</h1>\n        </div>\n        <div className='exchange-rte'>\n          <p className='rate'>Exchange Rate: {this.state.exchangeRate}</p>\n        </div>\n          <form onSubmit={this.convert}>\n              <input onChange={this.inputChange} className='amount' type='number' placeholder='Enter amount'/>\n              <select className='currencyFrom' onChange={this.curOneChange}>\n                {Object.keys(this.state.currencies).map((currency)=> {\n                  const currencyList = this.state.currencies[currency]\n                  return <option key={currencyList.id} value={currencyList.id}>{currencyList.id}</option>\n                })}\n              </select>\n              <span className='to'> to </span>\n              <select className='currencyTo' onChange={this.curtwoChange}>\n                {Object.keys(this.state.currencies).map((currency)=> {\n                  const currencyList = this.state.currencies[currency]\n                  return <option key={currencyList.id} value={currencyList.id}>{currencyList.id}</option>\n                })}\n              </select>\n            <button className='convert-btn' type='submit'>Convert</button>\n            <span className='result'>{this.state.result * this.state.exchangeRate}</span>\n          </form>\n      </div>\n    )\n  \n  }\n}\nconst mapStateToProps = ({currency}) => ({currency})\nexport default connect(mapStateToProps, {fetchCurrencies, getExchangeRate})(App)\n\n\n\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n// import registerServiceWorker from './registerServiceWorker'\n\nimport { reducers } from './reducers/reducers'\nimport App from './App'\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunk)\n  )\n)\nrender(<Provider store={store}><App /></Provider>, document.getElementById('root'))\n// registerServiceWorker();\n"],"sourceRoot":""}